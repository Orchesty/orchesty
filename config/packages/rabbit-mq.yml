parameters:
    rabbit_host: rabbitmq
    rabbit_port: 5672
    rabbit_vhost: /
    rabbit_user: guest
    rabbit_password: guest
    rabbit_persistent: false
    rabbit_path: /

rabbit_mq:
    connections:
        default:
            host: '%rabbit_host%'
            port: '%rabbit_port%'
            vhost: '%rabbit_vhost%'
            user: '%rabbit_user%'
            password: '%rabbit_password%'

    exchanges:
        repeater:
            durable: true
            type: direct

    queues:
        repeater:
            durable: true
            bindings:
                -   exchange: repeater
                    routing_key: repeater

        delayed_repeater:
            durable: true
            arguments:
                x-dead-letter-exchange: 'repeater'
                x-message-ttl: 6000
                x-dead-letter-routing-key: 'repeater'
            bindings:
                -   exchange: repeater
                    routing_key: delayed_repeater

    publishers:
        repeater:
            class: Hanaboso\PipesFramework\RabbitMq\Impl\Repeater\RepeaterProducer
            exchange: repeater
            routing_key: repeater

    consumers:
        repeater:
            class: Hanaboso\PipesFramework\RabbitMq\Impl\Repeater\RepeaterConsumer
            queue: repeater
            callback: hanaboso.pipes_framework.commons.repeater.repeater_callback
            no_ack: true

services:
    # callback for repeater
    hanaboso.pipes_framework.commons.repeater.repeater_callback:
        class: Hanaboso\PipesFramework\RabbitMq\Impl\Repeater\RepeaterCallback
        arguments:
            - '@rabbit_mq.publisher.repeater'
        calls:
            - [setRepeater, ['@hanaboso.pipes_framework.commons.rabbit_mq.repeater.repeater']]

    hanaboso.pipes_framework.commons.rabbit_mq.repeater.repeater:
        class: Hanaboso\PipesFramework\RabbitMq\Impl\Repeater\Repeater
        arguments: ['@rabbit_mq.publisher.repeater', '3']
